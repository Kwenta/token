{
  "address": "0x0984204D11091C85aEa4056E4A4082Ff1964401F",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "kwentaAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "rewardEscrowAddr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalAccounts",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalTokens",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "durationWeeks",
          "type": "uint256"
        }
      ],
      "name": "BatchEscrowed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "durationWeeks",
          "type": "uint256"
        }
      ],
      "name": "distributeEscrowed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kwenta",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardEscrow",
      "outputs": [
        {
          "internalType": "contract IRewardEscrow",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "numDeployments": 1,
  "solcInputHash": "b220fb9f72a9f8a8f656a6af3c8be47b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"kwentaAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardEscrowAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAccounts\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalTokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"durationWeeks\",\"type\":\"uint256\"}],\"name\":\"BatchEscrowed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"durationWeeks\",\"type\":\"uint256\"}],\"name\":\"distributeEscrowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kwenta\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardEscrow\",\"outputs\":[{\"internalType\":\"contract IRewardEscrow\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"distributeEscrowed(address[],uint256[],uint256)\":{\"details\":\"required to approve this contract address to spend senders tokens before calling\",\"params\":{\"accounts\":\": list of accounts to escrow\",\"amounts\":\": corresponding list of amounts to escrow\",\"durationWeeks\":\": number of weeks to escrow\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"distributeEscrowed(address[],uint256[],uint256)\":{\"notice\":\"Set escrow amounts in batches.\"},\"kwenta()\":{\"notice\":\"kwenta token contract\"},\"rewardEscrow()\":{\"notice\":\"rewards escrow contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EscrowDistributor.sol\":\"EscrowDistributor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"contracts/EscrowDistributor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"./interfaces/IRewardEscrow.sol\\\";\\n\\ncontract EscrowDistributor {\\n    /// @notice rewards escrow contract\\n    IRewardEscrow public immutable rewardEscrow;\\n\\n    /// @notice kwenta token contract\\n    IERC20 public immutable kwenta;\\n\\n    event BatchEscrowed(\\n        uint256 totalAccounts,\\n        uint256 totalTokens,\\n        uint256 durationWeeks\\n    );\\n\\n    constructor(address kwentaAddr, address rewardEscrowAddr) {\\n        kwenta = IERC20(kwentaAddr);\\n        rewardEscrow = IRewardEscrow(rewardEscrowAddr);\\n    }\\n\\n    /**\\n     * @notice Set escrow amounts in batches.\\n     * @dev required to approve this contract address to spend senders tokens before calling\\n     * @param accounts: list of accounts to escrow\\n     * @param amounts: corresponding list of amounts to escrow\\n     * @param durationWeeks: number of weeks to escrow\\n     */\\n    function distributeEscrowed(\\n        address[] calldata accounts,\\n        uint256[] calldata amounts,\\n        uint256 durationWeeks\\n    ) external {\\n        require(\\n            accounts.length == amounts.length,\\n            \\\"Number of accounts does not match number of values\\\"\\n        );\\n\\n        uint256 length = accounts.length;\\n        uint256 totalTokens;\\n        uint256 duration = durationWeeks * 1 weeks;\\n\\n        do {\\n            unchecked {\\n                --length;\\n            }\\n            totalTokens += amounts[length];\\n        } while (length != 0);\\n\\n        kwenta.transferFrom(msg.sender, address(this), totalTokens);\\n        kwenta.approve(address(rewardEscrow), totalTokens);\\n\\n        length = accounts.length;\\n\\n        do {\\n            unchecked {\\n                --length;\\n            }\\n            rewardEscrow.createEscrowEntry(\\n                accounts[length],\\n                amounts[length],\\n                duration\\n            );\\n        } while (length != 0);\\n\\n        emit BatchEscrowed({\\n            totalAccounts: accounts.length,\\n            totalTokens: totalTokens,\\n            durationWeeks: duration\\n        });\\n    }\\n}\\n\",\"keccak256\":\"0x653f38d2d2991784e7a5a5c68517dbefe8f446c935fb4896bfc123442329fd05\",\"license\":\"MIT\"},\"contracts/interfaces/IRewardEscrow.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nlibrary VestingEntries {\\n    struct VestingEntry {\\n        uint64 endTime;\\n        uint256 escrowAmount;\\n        uint256 duration;\\n    }\\n    struct VestingEntryWithID {\\n        uint64 endTime;\\n        uint256 escrowAmount;\\n        uint256 entryID;\\n    }\\n}\\n\\ninterface IRewardEscrow {\\n    // Views\\n    function getKwentaAddress() external view returns (address);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function numVestingEntries(address account) external view returns (uint256);\\n\\n    function totalEscrowedAccountBalance(address account)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function totalVestedAccountBalance(address account)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function getVestingQuantity(address account, uint256[] calldata entryIDs)\\n        external\\n        view\\n        returns (uint256, uint256);\\n\\n    function getVestingSchedules(\\n        address account,\\n        uint256 index,\\n        uint256 pageSize\\n    ) external view returns (VestingEntries.VestingEntryWithID[] memory);\\n\\n    function getAccountVestingEntryIDs(\\n        address account,\\n        uint256 index,\\n        uint256 pageSize\\n    ) external view returns (uint256[] memory);\\n\\n    function getVestingEntryClaimable(address account, uint256 entryID)\\n        external\\n        view\\n        returns (uint256, uint256);\\n\\n    function getVestingEntry(address account, uint256 entryID)\\n        external\\n        view\\n        returns (\\n            uint64,\\n            uint256,\\n            uint256\\n        );\\n\\n    // Mutative functions\\n    function vest(uint256[] calldata entryIDs) external;\\n\\n    function createEscrowEntry(\\n        address beneficiary,\\n        uint256 deposit,\\n        uint256 duration\\n    ) external;\\n\\n    function appendVestingEntry(\\n        address account,\\n        uint256 quantity,\\n        uint256 duration\\n    ) external;\\n\\n    function stakeEscrow(uint256 _amount) external;\\n\\n    function unstakeEscrow(uint256 _amount) external;\\n}\\n\",\"keccak256\":\"0x982ccdf737fd3aa86031dd74db05ab789c1e9e72f1c1f57a3b5cd59b28378c3f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b50604051610bae380380610bae833981810160405281019061003291906100bc565b8173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050505061014a565b6000815190506100b681610133565b92915050565b600080604083850312156100d3576100d261012e565b5b60006100e1858286016100a7565b92505060206100f2858286016100a7565b9150509250929050565b60006101078261010e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b61013c816100fc565b811461014757600080fd5b50565b60805160601c60a05160601c610a1d6101916000396000818161013c015281816101ec01526103e8015260008181610228015281816102c8015261040c0152610a1d6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80635837b63d146100465780639034802b14610062578063a430be6c14610080575b600080fd5b610060600480360381019061005b9190610546565b61009e565b005b61006a6103e6565b60405161007791906106fe565b60405180910390f35b61008861040a565b6040516100959190610719565b60405180910390f35b8282905085859050146100e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100dd90610734565b60405180910390fd5b600085859050905060008062093a808461010091906107f2565b90505b8260019003925085858481811061011d5761011c61090b565b5b905060200201358261012f919061079c565b91506000831415610103577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161019793929190610667565b602060405180830381600087803b1580156101b157600080fd5b505af11580156101c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e991906105db565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b815260040161026592919061069e565b602060405180830381600087803b15801561027f57600080fd5b505af1158015610293573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b791906105db565b508787905092505b826001900392507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a0416ed38989868181106103155761031461090b565b5b905060200201602081019061032a9190610519565b88888781811061033d5761033c61090b565b5b90506020020135846040518463ffffffff1660e01b8152600401610363939291906106c7565b600060405180830381600087803b15801561037d57600080fd5b505af1158015610391573d6000803e3d6000fd5b5050505060008314156102bf577f34c73181fd22a80ebbb69617ebf3eb27bb38fa6c4c91169a8966340a3ef290d58888905083836040516103d493929190610754565b60405180910390a15050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008135905061043d816109a2565b92915050565b60008083601f8401126104595761045861093f565b5b8235905067ffffffffffffffff8111156104765761047561093a565b5b60208301915083602082028301111561049257610491610944565b5b9250929050565b60008083601f8401126104af576104ae61093f565b5b8235905067ffffffffffffffff8111156104cc576104cb61093a565b5b6020830191508360208202830111156104e8576104e7610944565b5b9250929050565b6000815190506104fe816109b9565b92915050565b600081359050610513816109d0565b92915050565b60006020828403121561052f5761052e61094e565b5b600061053d8482850161042e565b91505092915050565b6000806000806000606086880312156105625761056161094e565b5b600086013567ffffffffffffffff8111156105805761057f610949565b5b61058c88828901610443565b9550955050602086013567ffffffffffffffff8111156105af576105ae610949565b5b6105bb88828901610499565b935093505060406105ce88828901610504565b9150509295509295909350565b6000602082840312156105f1576105f061094e565b5b60006105ff848285016104ef565b91505092915050565b6106118161084c565b82525050565b61062081610894565b82525050565b61062f816108a6565b82525050565b600061064260328361078b565b915061064d82610953565b604082019050919050565b6106618161088a565b82525050565b600060608201905061067c6000830186610608565b6106896020830185610608565b6106966040830184610658565b949350505050565b60006040820190506106b36000830185610608565b6106c06020830184610658565b9392505050565b60006060820190506106dc6000830186610608565b6106e96020830185610658565b6106f66040830184610658565b949350505050565b60006020820190506107136000830184610617565b92915050565b600060208201905061072e6000830184610626565b92915050565b6000602082019050818103600083015261074d81610635565b9050919050565b60006060820190506107696000830186610658565b6107766020830185610658565b6107836040830184610658565b949350505050565b600082825260208201905092915050565b60006107a78261088a565b91506107b28361088a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156107e7576107e66108dc565b5b828201905092915050565b60006107fd8261088a565b91506108088361088a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610841576108406108dc565b5b828202905092915050565b60006108578261086a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061089f826108b8565b9050919050565b60006108b1826108b8565b9050919050565b60006108c3826108ca565b9050919050565b60006108d58261086a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b7f4e756d626572206f66206163636f756e747320646f6573206e6f74206d61746360008201527f68206e756d626572206f662076616c7565730000000000000000000000000000602082015250565b6109ab8161084c565b81146109b657600080fd5b50565b6109c28161085e565b81146109cd57600080fd5b50565b6109d98161088a565b81146109e457600080fd5b5056fea26469706673582212205df1a913cc837af849bd0e8668af3a75869c26edbf03979c9fb8d615571cd6b664736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80635837b63d146100465780639034802b14610062578063a430be6c14610080575b600080fd5b610060600480360381019061005b9190610546565b61009e565b005b61006a6103e6565b60405161007791906106fe565b60405180910390f35b61008861040a565b6040516100959190610719565b60405180910390f35b8282905085859050146100e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100dd90610734565b60405180910390fd5b600085859050905060008062093a808461010091906107f2565b90505b8260019003925085858481811061011d5761011c61090b565b5b905060200201358261012f919061079c565b91506000831415610103577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161019793929190610667565b602060405180830381600087803b1580156101b157600080fd5b505af11580156101c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e991906105db565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b815260040161026592919061069e565b602060405180830381600087803b15801561027f57600080fd5b505af1158015610293573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b791906105db565b508787905092505b826001900392507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a0416ed38989868181106103155761031461090b565b5b905060200201602081019061032a9190610519565b88888781811061033d5761033c61090b565b5b90506020020135846040518463ffffffff1660e01b8152600401610363939291906106c7565b600060405180830381600087803b15801561037d57600080fd5b505af1158015610391573d6000803e3d6000fd5b5050505060008314156102bf577f34c73181fd22a80ebbb69617ebf3eb27bb38fa6c4c91169a8966340a3ef290d58888905083836040516103d493929190610754565b60405180910390a15050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008135905061043d816109a2565b92915050565b60008083601f8401126104595761045861093f565b5b8235905067ffffffffffffffff8111156104765761047561093a565b5b60208301915083602082028301111561049257610491610944565b5b9250929050565b60008083601f8401126104af576104ae61093f565b5b8235905067ffffffffffffffff8111156104cc576104cb61093a565b5b6020830191508360208202830111156104e8576104e7610944565b5b9250929050565b6000815190506104fe816109b9565b92915050565b600081359050610513816109d0565b92915050565b60006020828403121561052f5761052e61094e565b5b600061053d8482850161042e565b91505092915050565b6000806000806000606086880312156105625761056161094e565b5b600086013567ffffffffffffffff8111156105805761057f610949565b5b61058c88828901610443565b9550955050602086013567ffffffffffffffff8111156105af576105ae610949565b5b6105bb88828901610499565b935093505060406105ce88828901610504565b9150509295509295909350565b6000602082840312156105f1576105f061094e565b5b60006105ff848285016104ef565b91505092915050565b6106118161084c565b82525050565b61062081610894565b82525050565b61062f816108a6565b82525050565b600061064260328361078b565b915061064d82610953565b604082019050919050565b6106618161088a565b82525050565b600060608201905061067c6000830186610608565b6106896020830185610608565b6106966040830184610658565b949350505050565b60006040820190506106b36000830185610608565b6106c06020830184610658565b9392505050565b60006060820190506106dc6000830186610608565b6106e96020830185610658565b6106f66040830184610658565b949350505050565b60006020820190506107136000830184610617565b92915050565b600060208201905061072e6000830184610626565b92915050565b6000602082019050818103600083015261074d81610635565b9050919050565b60006060820190506107696000830186610658565b6107766020830185610658565b6107836040830184610658565b949350505050565b600082825260208201905092915050565b60006107a78261088a565b91506107b28361088a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156107e7576107e66108dc565b5b828201905092915050565b60006107fd8261088a565b91506108088361088a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610841576108406108dc565b5b828202905092915050565b60006108578261086a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061089f826108b8565b9050919050565b60006108b1826108b8565b9050919050565b60006108c3826108ca565b9050919050565b60006108d58261086a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b7f4e756d626572206f66206163636f756e747320646f6573206e6f74206d61746360008201527f68206e756d626572206f662076616c7565730000000000000000000000000000602082015250565b6109ab8161084c565b81146109b657600080fd5b50565b6109c28161085e565b81146109cd57600080fd5b50565b6109d98161088a565b81146109e457600080fd5b5056fea26469706673582212205df1a913cc837af849bd0e8668af3a75869c26edbf03979c9fb8d615571cd6b664736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "distributeEscrowed(address[],uint256[],uint256)": {
        "details": "required to approve this contract address to spend senders tokens before calling",
        "params": {
          "accounts": ": list of accounts to escrow",
          "amounts": ": corresponding list of amounts to escrow",
          "durationWeeks": ": number of weeks to escrow"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "distributeEscrowed(address[],uint256[],uint256)": {
        "notice": "Set escrow amounts in batches."
      },
      "kwenta()": {
        "notice": "kwenta token contract"
      },
      "rewardEscrow()": {
        "notice": "rewards escrow contract"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}